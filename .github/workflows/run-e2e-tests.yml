name: Run Terralab CLI e2e tests with BEE using GCP workspace
on:
  push:
    branches:
      - main
      - TSPS-331_cli_e2e_test
    paths-ignore:
      - '*.md'
  workflow_dispatch:
    inputs:
      custom-app-version:
        description: 'custom image tag to specify which version of teaspoons to deploy, e.g. `0.0.81-66ceced`. defaults to dev template if not specified.'
        required: false
        type: string
      e2e-test-version-ref:
        description: 'Name of branch or commit hash in the dsp-reusable-workflows repo to use. defaults to main'
        required: true
        default: 'TSPS-331_cli_e2e_test' # revert later
        type: string
      wdl-method-version:
        description: 'Name of branch or release tag in the terra-scientific-pipelines-service repo to use for the test WDL. defaults to latest git release tag if not specified.'
        required: false
        type: string
      teaspoons-version:
        description: 'Semantic version (git tag) of Teaspoons to use. defaults to latest'
        required: false
        type: string
      cli-version-ref:
        description: 'Branch or semantic version (git tag) of CLI repo to use. defaults to latest published tag.'
        required: false
        type: string
env:
  BEE_NAME: 'teaspoons-${{ github.run_id }}-${{ github.run_attempt}}-dev'
  TOKEN: '${{ secrets.BROADBOT_TOKEN }}'
  RUN_NAME_SUFFIX: ${{ github.event.repository.name }}-${{ github.run_id }}-${{github.run_attempt }}
jobs:
  init-github-context-and-params-gen:
    runs-on: ubuntu-latest
    outputs:
      delete-bee: '${{ steps.extract-inputs-and-generate-params.outputs.delete-bee }}'
      custom-app-version-formatted: '${{ steps.extract-inputs-and-generate-params.outputs.custom-app-version-formatted }}'
      project-name: '${{ steps.extract-inputs-and-generate-params.outputs.project_name }}'
      bee-name: '${{ env.BEE_NAME }}'
      teaspoons-version: '${{ steps.extract-inputs-and-generate-params.outputs.teaspoons-version }}'
      cli-version-ref: '${{ steps.extract-inputs-and-generate-params.outputs.cli-version-ref }}'
      e2e-test-version-ref: '${{ steps.extract-inputs-and-generate-params.outputs.e2e-test-version-ref }}'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get inputs or use defaults, generate other parameters
        id: extract-inputs-and-generate-params
        run: |
          echo "delete-bee=${{ inputs.delete-bee || true }}" >> $GITHUB_OUTPUT
          if [ -z ${{ inputs.custom-app-version }} ]; then
            echo "using input custom-app-version-formatted: {}"
            echo "custom-app-version-formatted={}" >> $GITHUB_OUTPUT
          else
            echo "using custom custom-app-version-formatted: {\\\"teaspoons\\\": {\\\"appVersion\\\":\\\"${{ inputs.custom-app-version }}\\\"} }"
            echo "custom-app-version-formatted={\\\"teaspoons\\\": {\\\"appVersion\\\":\\\"${{ inputs.custom-app-version }}\\\"} }" >> $GITHUB_OUTPUT
          fi
          project_name=$(echo "tmp-billing-project-$(uuidgen)" | cut -c -30)
          echo "using project_name: ${project_name}"
          echo "project_name=${project_name}" >> $GITHUB_OUTPUT
          if [ -z ${{ inputs.teaspoons-version }} ]; then
            echo "trying to get latest teaspoons version..."
            TEASPOONS_GIT_TAG=$(curl "https://api.github.com/repos/DataBiosphere/terra-scientific-pipelines-service/tags" | jq -r '.[0].name')
            echo "found latest teaspoons git tag: $TEASPOONS_GIT_TAG"
            echo "teaspoons-version=$TEASPOONS_GIT_TAG" >> $GITHUB_OUTPUT
          else
            echo "using custom teaspoons-version: ${{ inputs.teaspoons-version }}"
            echo "teaspoons-version=${{ inputs.teaspoons-version }}" >> $GITHUB_OUTPUT
          fi
          if [ -z ${{ inputs.cli-version-ref }} ]; then
            #echo "trying to get latest cli version..."
            #echo "found latest cli version: $(git describe --tags $(git rev-list --tags --max-count=1))"
            #echo "cli-version-ref=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_OUTPUT

            echo "using custom cli-version-ref: $GITHUB_REF"
            echo "cli-version-ref=$GITHUB_REF" >> $GITHUB_OUTPUT
          else
            echo "using custom cli version: ${{ inputs.cli-version-ref }}"
            echo "cli-version-ref=${{ inputs.cli-version-ref }}" >> $GITHUB_OUTPUT
          fi
          if [ -z ${{ inputs.e2e-test-version-ref }} ]; then
            echo "setting e2e test version ref to TSPS-331_cli_e2e_test (later will revert to main)"
            echo "e2e-test-version-ref=TSPS-331_cli_e2e_test" >> $GITHUB_OUTPUT
          else
            echo "using custom e2e-test-version-ref: ${{ inputs.e2e-test-version-ref }}"
            echo "e2e-test-version-ref=${{ inputs.e2e-test-version-ref }}" >> $GITHUB_OUTPUT
          fi

  create-bee-workflow:
    runs-on: ubuntu-latest
    needs: [ init-github-context-and-params-gen ]
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Get actions
        uses: actions/checkout@v4

      - name: dispatch to terra-github-workflows
        id: FirstAttemptCreateBee
        continue-on-error: true
        uses: ./.github/actions/create-bee
        with:
          run_name: "bee-create-${{ env.BEE_NAME }}"
          bee_name: ${{ env.BEE_NAME }}
          token: '${{ env.TOKEN }}'
          custom_version_json: ${{ needs.init-github-context-and-params-gen.outputs.custom-app-version-formatted }}

  run-e2e-test-job:
    needs:
      - create-bee-workflow
      - init-github-context-and-params-gen
    permissions:
      contents: read
      id-token: write
    uses: broadinstitute/dsp-reusable-workflows/.github/workflows/run_teaspoons_e2e_cli_tests.yaml@TSPS-331_cli_e2e_test
    with:
      billing-project-name: '${{ needs.init-github-context-and-params-gen.outputs.project-name }}'
      bee-name: '${{ needs.init-github-context-and-params-gen.outputs.bee-name }}'
      e2e-test-version-ref: '${{ needs.init-github-context-and-params-gen.outputs.e2e-test-version-ref }}'
      wdl-method-version: '${{ needs.init-github-context-and-params-gen.outputs.teaspoons-version }}'
      cli-version-ref: '${{ needs.init-github-context-and-params-gen.outputs.cli-version-ref }}'

  destroy-bee-workflow:
    runs-on: ubuntu-latest
    needs:
      - run-e2e-test-job
    if: '${{ needs.init-github-context-and-params-gen.outputs.delete-bee && always() }}'
    steps:
      - name: dispatch to terra-github-workflows
        uses: broadinstitute/workflow-dispatch@v3
        with:
          workflow: bee-destroy
          repo: broadinstitute/terra-github-workflows
          ref: refs/heads/main
          wait-for-completion: false
          token: '${{ env.TOKEN }}'
          inputs: '{ "bee-name": "${{ env.BEE_NAME }}" }'

  report-workflow:
    uses: broadinstitute/sherlock/.github/workflows/client-report-workflow.yaml@main
    if: github.ref == 'refs/heads/main'
    with:
      notify-slack-channels-upon-workflow-completion: "#terra-teaspoons-alerts"
    permissions:
      id-token: write
